{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/z.zang/Documents/P19/redux-virtualpet/src/components/UserName.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setUserName } from '../actions';\n\nvar UserName = function UserName(_ref) {\n  var dispatch = _ref.dispatch;\n  var input;\n\n  var onClick = function onClick(e) {\n    console.log(input.value);\n\n    if (input.value.trim() !== \"\") {\n      dispatch(setUserName(input.value));\n      console.log('working');\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"User name: \", _this.props.state.names.userName), React.createElement(\"input\", {\n    type: \"text\",\n    ref: function ref(node) {\n      return input = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"change name\"));\n};\n\nexport default connect()(UserName);","map":{"version":3,"sources":["/Users/z.zang/Documents/P19/redux-virtualpet/src/components/UserName.js"],"names":["React","connect","setUserName","UserName","dispatch","input","onClick","e","console","log","value","trim","props","state","names","userName","node"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACjC,MAAIC,KAAJ;;AACA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAAAC,CAAC,EAAI;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,KAAlB;;AACA,QAAIL,KAAK,CAACK,KAAN,CAAYC,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BP,MAAAA,QAAQ,CAACF,WAAW,CAACG,KAAK,CAACK,KAAP,CAAZ,CAAR;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF,GAND;;AAQA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAe,KAAI,CAACG,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuBC,QAAtC,CADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAE,aAAAC,IAAI;AAAA,aAAKX,KAAK,GAAGW,IAAb;AAAA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEV,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADF;AAQD,CAlBD;;AAoBA,eAAeL,OAAO,GAAGE,QAAH,CAAtB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { setUserName } from '../actions'\n\nconst UserName = ({ dispatch }) => {\n  let input;\n  let onClick = e => {\n    console.log(input.value)\n    if (input.value.trim() !== \"\") {\n      dispatch(setUserName(input.value))\n      console.log('working')\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <p>User name: {this.props.state.names.userName}</p>\n      <input type=\"text\" ref={node => (input = node)} />\n      <button type=\"submit\" onClick={onClick}>change name</button>\n    </React.Fragment>\n\n  );\n}\n\nexport default connect()(UserName)"]},"metadata":{},"sourceType":"module"}