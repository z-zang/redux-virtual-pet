{"ast":null,"code":"import _classCallCheck from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/z.zang/Documents/P19/redux-virtualpet/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as action from './actions';\n\nvar AddTodo = function AddTodo(_ref) {\n  var dispatch = _ref.dispatch;\n  var input;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n\n      if (!input.value.trim()) {\n        return;\n      }\n\n      dispatch(action.setPetName(input.value));\n      input.value = '';\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: function ref(node) {\n      input = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Add Todo\")));\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect()(App);","map":{"version":3,"sources":["/Users/z.zang/Documents/P19/redux-virtualpet/src/App.js"],"names":["React","Component","connect","action","AddTodo","dispatch","input","e","preventDefault","value","trim","setPetName","node","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChC,MAAIC,KAAJ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAE,kBAAAC,CAAC,EAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,CAACF,KAAK,CAACG,KAAN,CAAYC,IAAZ,EAAL,EAAyB;AACvB;AACD;;AACDL,MAAAA,QAAQ,CAACF,MAAM,CAACQ,UAAP,CAAkBL,KAAK,CAACG,KAAxB,CAAD,CAAR;AACAH,MAAAA,KAAK,CAACG,KAAN,GAAc,EAAd;AACD,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAO,IAAA,GAAG,EAAE,aAAAG,IAAI,EAAI;AAClBN,MAAAA,KAAK,GAAGM,IAAR;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAWE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF,CADF;AAmBD,CAtBD;;IAyBMC,G;;;;;;;;;;;;;6BAEK;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;;EAZeZ,S;;AAelB,eAAeC,OAAO,GAAGW,GAAH,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as action from './actions';\n\nconst AddTodo = ({ dispatch }) => {\n  let input\n\n  return (\n    <div>\n      <form onSubmit={e => {\n        e.preventDefault()\n        if (!input.value.trim()) {\n          return\n        }\n        dispatch(action.setPetName(input.value))\n        input.value = ''\n      }}>\n        <input ref={node => {\n          input = node\n        }} />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n    </div>\n  )\n}\n\n\nclass App extends Component {\n  \n  render() {\n    \n    return (\n      <div className=\"App\">\n        <AddTodo/>\n\n\n        \n      </div>\n    );\n  }\n}\n\nexport default connect()(App);\n"]},"metadata":{},"sourceType":"module"}