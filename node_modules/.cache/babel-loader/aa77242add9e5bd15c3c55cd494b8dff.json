{"ast":null,"code":"import _objectSpread from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nimport initialState from './initialState';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.stats;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.PLAY_CATCH:\n      console.log('play catch fired');\n      console.log(state.hunger, state.health);\n      var happy = state.happiness >= 100 ? 0 : (state.hunger || state.health) >= 60 ? 10 : -10;\n      return _objectSpread({}, state, {\n        happiness: state.happiness + happy,\n        exp: state.exp + 10,\n        money: state.money + 10,\n        hunger: state.hunger - 10,\n        health: state.health - 5\n      });\n\n    case actionTypes.GO_TO_SLEEP:\n      return _objectSpread({}, state, {\n        happiness: state.happiness + 5,\n        health: state.health + 5\n      });\n\n    case actionTypes.EAT_FOOD:\n      return _objectSpread({}, state, {\n        hunger: state.hunger + 20\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/z.zang/Documents/P19/redux-virtualpet/src/reducers/stats.js"],"names":["actionTypes","initialState","state","stats","action","type","PLAY_CATCH","console","log","hunger","health","happy","happiness","exp","money","GO_TO_SLEEP","EAT_FOOD"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,gBAAe,YAAwC;AAAA,MAAvCC,KAAuC,uEAA/BD,YAAY,CAACE,KAAkB;AAAA,MAAXC,MAAW;;AAErD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAW,CAACM,UAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,MAAlB,EAA0BP,KAAK,CAACQ,MAAhC;AACA,UAAIC,KAAK,GAAGT,KAAK,CAACU,SAAN,IAAmB,GAAnB,GAAyB,CAAzB,GAA6B,CAACV,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACQ,MAAvB,KAAkC,EAAlC,GAAuC,EAAvC,GAA4C,CAAC,EAAtF;AAEA,+BACKR,KADL;AAEEU,QAAAA,SAAS,EAAEV,KAAK,CAACU,SAAN,GAAkBD,KAF/B;AAGEE,QAAAA,GAAG,EAAEX,KAAK,CAACW,GAAN,GAAY,EAHnB;AAIEC,QAAAA,KAAK,EAAEZ,KAAK,CAACY,KAAN,GAAc,EAJvB;AAKEL,QAAAA,MAAM,EAAEP,KAAK,CAACO,MAAN,GAAe,EALzB;AAMEC,QAAAA,MAAM,EAAER,KAAK,CAACQ,MAAN,GAAe;AANzB;;AAQF,SAAKV,WAAW,CAACe,WAAjB;AACE,+BACKb,KADL;AAEEU,QAAAA,SAAS,EAAEV,KAAK,CAACU,SAAN,GAAkB,CAF/B;AAGEF,QAAAA,MAAM,EAAER,KAAK,CAACQ,MAAN,GAAe;AAHzB;;AAKF,SAAKV,WAAW,CAACgB,QAAjB;AACE,+BACKd,KADL;AAEEO,QAAAA,MAAM,EAAEP,KAAK,CAACO,MAAN,GAAe;AAFzB;;AAGF;AACE,aAAOP,KAAP;AAzBJ;AA2BD,CA7BD","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport initialState from './initialState';\n\nexport default (state = initialState.stats, action) => {\n\n  switch (action.type) {\n    case actionTypes.PLAY_CATCH:\n      console.log('play catch fired')\n      console.log(state.hunger, state.health)\n      var happy = state.happiness >= 100 ? 0 : (state.hunger || state.health) >= 60 ? 10 : -10\n\n      return {\n        ...state, \n        happiness: state.happiness + happy,\n        exp: state.exp + 10,\n        money: state.money + 10,\n        hunger: state.hunger - 10,\n        health: state.health - 5, \n      }\n    case actionTypes.GO_TO_SLEEP:\n      return {\n        ...state, \n        happiness: state.happiness + 5,\n        health: state.health + 5, \n      }\n    case actionTypes.EAT_FOOD:\n      return {\n        ...state, \n        hunger: state.hunger + 20}\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}