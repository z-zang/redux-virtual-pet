{"ast":null,"code":"import _classCallCheck from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/z.zang/Documents/P19/redux-virtualpet/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/z.zang/Documents/P19/redux-virtualpet/src/components/PetName.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setPetName } from '../actions';\n\nvar PetName =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PetName, _Component);\n\n  function PetName() {\n    _classCallCheck(this, PetName);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PetName).apply(this, arguments));\n  }\n\n  _createClass(PetName, [{\n    key: \"render\",\n    value: function render() {\n      var input;\n      var state = this.props.state;\n      console.log('state', state.names);\n\n      var onClick = function onClick(e) {\n        if (input.value.trim() !== \"\") {\n          state.dispatch(setPetName(input.value));\n        }\n      };\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: function ref(node) {\n          return input = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"change name\"));\n    }\n  }]);\n\n  return PetName;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log('sdfsfs', state);\n  return {\n    state: state.names\n  };\n};\n\nexport default connect(mapStateToProps)(PetName);","map":{"version":3,"sources":["/Users/z.zang/Documents/P19/redux-virtualpet/src/components/PetName.js"],"names":["React","Component","connect","setPetName","PetName","input","state","props","console","log","names","onClick","e","value","trim","dispatch","node","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;;IAEMC,O;;;;;;;;;;;;;6BACK;AACP,UAAIC,KAAJ;AADO,UAGCC,KAHD,GAGW,KAAKC,KAHhB,CAGCD,KAHD;AAIPE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACI,KAA3B;;AAGA,UAAIC,OAAO,GAAG,SAAVA,OAAU,CAAAC,CAAC,EAAI;AACjB,YAAIP,KAAK,CAACQ,KAAN,CAAYC,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BR,UAAAA,KAAK,CAACS,QAAN,CAAeZ,UAAU,CAACE,KAAK,CAACQ,KAAP,CAAzB;AACD;AACF,OAJD;;AAMA,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAE,aAAAG,IAAI;AAAA,iBAAKX,KAAK,GAAGW,IAAb;AAAA,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEL,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADF;AAQD;;;;EAtBmBV,S;;AAyBtB,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAACX,KAAD,EAAW;AACjCE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AACA,SAAO;AACLA,IAAAA,KAAK,EAAEA,KAAK,CAACI;AADR,GAAP;AAGD,CALD;;AAOA,eAAeR,OAAO,CAACe,eAAD,CAAP,CAAyBb,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setPetName } from '../actions'\n\nclass PetName extends Component {\n  render() {\n    let input;\n    \n    const { state } = this.props\n    console.log('state', state.names)\n\n\n    let onClick = e => {\n      if (input.value.trim() !== \"\") {\n        state.dispatch(setPetName(input.value))\n      }\n    };\n\n    return (\n      <React.Fragment>\n        {/* <p>Pet name: {state.names.petName}</p> */}\n        <input type=\"text\" ref={node => (input = node)} />\n        <button type=\"submit\" onClick={onClick}>change name</button>\n      </React.Fragment>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('sdfsfs', state)\n  return {\n    state: state.names\n  }\n}\n\nexport default connect(mapStateToProps)(PetName);"]},"metadata":{},"sourceType":"module"}